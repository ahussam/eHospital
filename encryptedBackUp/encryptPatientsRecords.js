
// Used for Linux Based system. May not work without modifying a couple of lines 

var mongoose = require('mongoose');
var fs = require('fs');
var crypto = require('crypto');

// Check if the DB exists 

mongoose.connect('mongodb://localhost/eHospital', { useMongoClient: true });
var db = mongoose.connection;
db.on('error', console.error.bind(console, 'connection error:'));
db.once('open', function () {
  console.log("OK");
});

// create a CVS file (unencrypted) 

/*

db: eHospital
collection: patients
type: csv 
output: /opt/backups/patients.csv 

*/
var spawn = require('child_process').spawn,
ls = spawn('mongoexport', ['--db', 'eHospital', '--collection', 'patients', '--type', 'csv', '--out', '/opt/backups/patients.csv']);


// Encrypting CSV file 
// Key was generated by https://github.com/ahussam/masterKey-generator
// Encryption master key: 


var masterKey = ''; // Put your masterkey here 

try {
  var data = fs.readFileSync('/opt/backups/patients.csv', 'utf8');
  var encryptedText = encrypt(masterKey, data);

  fs.writeFile('/opt/backups/patients.csv', encryptedText, function (err) {
    if (err) throw err;
    console.log('Done!');
  });

} catch (e) {
  console.log('Error:', e.stack);
}

// Using AES as encryption algorithm 

function encrypt(key, text) {
  var cipher = crypto.createCipher('aes-256-cbc', key);
  var crypted = cipher.update(text, 'utf8', 'hex');
  crypted += cipher.final('hex');
  return crypted;
}